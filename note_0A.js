var answer = 
[
'',

'DQM3',

'첫째 : 감리, 효율성 향상, 안전성 확보, 3자적 관점, IT 시스템 구축 및 운영 종합점검, 문제점 개선 활동, 공공 시스템 구축시 전자정부법 57조 1항 의거 의무사항 <br/>\
둘째 : PMO, 정보화사업 발주자 관점, 프로젝트 이행 지원 조직, 공공 PMO - 전자정부법 62조 2항 의거 권고 사항 <br/>\
셋째 : 광정관리(일정/범위) 특화된 관리활동 수행, 산출물관리(부수적 업무 수행) \
',

'예비조사 (감리계획서) → 현장감리 (감리수행결과보고서) → 시정조치확인 (시정조치확인보고서) 순으로 진행합니다.\
',

'',

'- 위험 : 발생하기 전의 사건 <br/>\
- 이슈 : 발생한 이후 사건 <br/><br/>\
- 위험은 위험분석을 통해 정성적분서으로 우선순위를, 정량적 분석으로 수치를 표현하여 대응 <br/>\
- 이슈는 이슈관리 대장을 통해 발생한 사건에 대해 대응 \
',

'- 데이터 기능 : 데이터 베이스 논리적 위치에 따라 내부, 외부 ILF, EIF 로 처리 <br/>\
- 트랜잭션 기능 : 트랜잭션 특성에 따라 EI, EO, EQ 를 통해 처리 <br/>\
- 소프트웨어 산정기법으로 사용 \
',

'- FP산정시 초반에 정확한 공수가 안되는 이유 : 정확한 수치에 대한 근거 부족 <br/>\
- 비슷한 기존 프로젝트 존재시 벤치마크, 없을시 전문가 산정 <br/>\
- 상황이 여의치 않을시 정확한 수치 기반이 어려운 프로젝트 초반에는 간이법을, 어느정도 프로젝트 구체화 되는 후반에는 정통법을 이용하여 수행 \
',

'* 민간 업체에서 업무를 해서 FP 사용 경험 x, 하지만 학습 기반 말씀 드리겠습니다 <br/>\
- FP 공수 산정을 통해 1FP 약 55만원 비용 통해 산정, 프로젝트 규모 따라 다르게 산정?? \
',

'- Incident : 헬프 데스크를 통해 처리되는 민원 처리 <br/>\
- Problem : 근본적인 원인에 대한 관리 <br/><br/>\
- Incident를 통해 처리되는 이슈중에 근본적인 분석이 필요한 내용을 담당자에게 전달, 근본적인 원인 분석하고 처리 \
',

'- 지도 학습 : 레이블 / Classifier <br/>\
- 비지도 학습 : 레이블x / Clustering <br/>\
- 강화 학습 : Action, State, Reward / 강화학습의 Reward를 레이블로 보는가에 따라 지도학습으로 분류하기도 함 \
',

'- 사전정보 없이 비슷한 특성 묶는 비지도 학습 원리 <br/>\
- 대표적으로 거리 기준 Centroid 기반인 k-means 알고리즘이 있으며 이외, DBSCAN, GAN 등이 있습니다. \
',

'- 예로부터 SW 플랫폼 시장은 관련 업계의 쟁취 대상이었습니다. <br/>\
- 하지만 현재 IT 공룡이라 불리는 Apple과 Google의 풍부한 3rd Party, 고객층 등을 고려했을시 이들과 경쟁하여 플랫폼을 쟁취한다면 더할나위 없겠지만 <br/>\
- 투자대비 성과 측면, CAPEX, OPEX 절감 측면에서 플랫폼을 포기하고 Device 에 집중하여 시장을 공략할 선택 할 수 밖에 없을 것이라 생각 듭니다. \
',

'',

'- 관리기법 : 간트차트, CCM 등이 있지만 현실적으로 많이 사용했던 것은 WBS 변형한 일정표 <br/>\
- 프로젝트시 가장 중요 : 인적 자원관리, 소프트웨어도 사람이 만드는 것인 만큼 사람의 특성, 성향을 파악하는 것이 중요, 위를 기반으로 개발 Task 할당 중요 \
',

'- 가상화 아닌 서버기반일 경우 스케일 아웃, 업이 안되어 확장성 문제 있음, 컨테이너 기반 POD 구성, 레파지토리에 저장하고 배포하는 형식 사용 함 <br/>\
- 최근 코로나19 예방접종 사전 예약 시스템과 같은 경우도 가상화를 사용하면 부하로 인한 시스템 대응 좋음\
',

'* 네 면접관님 말씀이 맞습니다 <br/>\
- 이러한 부분은 모든 데이터 동기화가 되어야하는 DBMS 와 같은 부분은 어려운 사실이다. <br/>\
- 이를 극복하기 위해 분산 환경 동기화를 위한 SAGA Pattern, Message Queueing 과 같은 기술을 통해 극복이 가능 하다 \
',

'- 전체 가상화와 부분가상화는 크게 명령어 전달 방식에 따라 명령 해석을 직접 전달하는 베어 메탈 방식은 전체 가상화, 이와 달리 API 를 통해 OS 명령어를 제어하는 방식이 바로 부분 가상화 입니다. <br/>\
- 전체 가상화는 Guest OS를 수정하지 않아도 되는 방식이고, 반대로 부분 가상화는 Guest OS를 수정하여야만 가상화가 가능한 방식입니다. \
',

];