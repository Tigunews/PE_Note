  var question = question.concat(
  // 0
  '레그테크',
  // 1
  'Null Point 역참조 취약점',
  // 2
  'WAVE',
  // 3 
  'V2X',
  // 4
  '데이터 주권 이슈',
  // 5
  'ISO 14971',
  // 6 
  'Web Authentication API',
  // 7
  '튜링테스트',
  // 8
  'KANO Model',
  // 9
  '인지무선',
  // 10
  'Trie',
  // 11
  '정보시스템 하드웨어 규모산정',
  // 12
  'Docker',
  // 13
  '비대칭키 암호',
  // 14
  'Philip Crosby의 품질경영 성숙도 모델 5단계',
  // 15
  'LDA',
  // 16
  '유전자 알고리즘',
  // 17
  '2020 가트너 10대 전략',
  // 18
  '온오프쇼어링',
  // 19
  '아바커스 프로젝트',
  // 20
  'NoSQL',
  // 21
  '데이터 무결성',
  // 22
  '데이터 모델링',
  // 23
  '빅블러 현상',
  // 24
  '디스크 스케줄링',
  // 25
  'Q-Learning',
  // 26
  '가상메모리 페이지 교체 알고리즘',
  // 28
  '넛지이론',
  )
  var answer = answer.concat(
  // 0
  '# 정의 : Regulation + Technology; ICT기술 활용 / 규제수준 업무 효율화 / 금융기관의 편의를 위해 만들어진 기술 / 금융 산업 새로운 영억 / 일종의 핀테크 <br/><br/>\
  # 특징 : 저비용, 고신뢰 / 규제 유연한 반응 / 금융 기업 업무 효율성 증대 <br/><br/>\
  # 프로세스 <br/>\
  1. 데이터 수집/집계 : 규제정보,금융시장 위험정보, 자산 및 투자정보 <br/>\
  2. 데이터 분석 : 위험정보, 거래정보, 고객신원 정보 분석 <br/>\
  3. 결과 생성 : 위험 예측 정보, 규정준수, 이상거래 여부 <br/><br/>\
  # 활용분야 <br/>\
  1. 관리, 감시 <br/>\
  - 데이터 관리 : 비정형 데이터 수집, 규제 이행 업무 활용 가공, 데이터 보호 / 데이터 마이닝, 클라우드 컴퓨팅, 클라우드 및 API, 데이터 보호 <br/>\
  - 위험분석 및 예측 : 최적화 테스트 모델, 자동화, 정확한 위험분석 / 머신러닝, 로보틱스 <br/>\
  - 실시간 거래 감시 : 이상거래 탐지 자동화, 클라우드 기반 고성능 감시 / 머신러닝, 클라우드 컴퓨팅 <br/>\
  2. 규제, 통제 <br/>\
  - 고객 신원 관리 : 고위험 신원 고객 SaaS 형태 공유, 신원 강화 / 머신러닝, 바이오 인증, 블록체인, 클라우드 컴퓨팅 <br/>\
  - 내부 통제 : 비정형데이터 분석(통화,메일,문서), 의미파악, 내부규정 위반 분석 / 데이터 마이닝, 머신러닝, 클라우드 컴퓨팅 <br/>\
  - 컴플라이언스 : 세계적 시각, 자산형황,투자거래 적법성 / 데이터 마이닝, 머신러닝, 클라우드 컴퓨팅 <br/>\
  ',
  // 1
  '# 정의 : Null Pointer에 어떠한 값을 대입하려고 할 때 발생하는 취약점 / IOS 동영상 재생만해도 시스템 재부팅되는 취약점 <br/><br/>\
  # 특징 <br/>\
  - IOS : iOS 8Ver 이상 64비트 제품 <br/>\
  - 취약점 : MMS, 브라우저등으로 특정파일 실행시 Kernel에서 Crash가 발생 및 리부팅 <br/><br/>\
  # 예시(코드) <br/>\
  Void null_pointer_dereference_ex1() <br/>\
  {<br/>\
    int *p = 0; // NULL 대입 <br/>\
    *p = 1 ; // Null Pointer dereference <br/>\
  }<br/><br/>\
  # 영향 <br/>\
  - 임의 코드 실행 : 악성 코드 / 시스템 권한 사용 / 임의 코드 실행 <br/>\
  - IOS 재부팅 <br/><br/>\
  # 대응 방안 <br/>\
  - 제조사 : 시큐어 코딩 / 신속한 패치 아키텍처 <br/>\
  - 사용자 : 기본적 보안 자세 <br/>\
  - 보안 관리자 : 안내 / 교육 실행 <br/>\
  ',
  // 2
  '# 정의 : Wireless Access in Vehicular Environments; 차량환경용 무선 접속 기술 <br/>\
  - 차량간 고속 무선 통신 기술, DSRC(RSE<->OBE) 기술 내포 <br/>\
  - V2I, V2V 통신 지원 <br/>\
  - IEEE 802.11p, IEEE 1609 규격의 조합 <br/><br/>\
  <img src = "./img/WAVE_ISO_비교.jpg"><br/><br/>\
  ',
  // 3
  '# 정의 : 차량이 유무선망을 통해 다른 차량 및 도로등 인프라가 구축된 사물과 정보를 교환하는 기술 <br/><br/>\
  # 종류: V2V, V2I, V2P, V2N <br/><br/>\
  # 스마트 모빌리티 산업의 단계 분류 <br/>\
  - 1.0 : 낮은 수준의 주행기술로 대량생산 추구 <br/>\
  - 2.0 : 거대 자동차 부품회사 성격의 대량생산 및 운영 효율화 추구 <br/>\
  - 3.0 : 자동차 시스템 전장화 기반의 차량 안전성과 효율성 추구 <br/>\
  - 4.0 : 자동차-ICT 융합 기반의 자율주행, 커넥티드카, 차량 공유 등을 추구 <br/><br/>\
  # 기술동향 : 5.9GHz, 200km/h, 1km, 26Mbps <br/>\
  ',
  // 4
  '# 법/규제 차원 대응 방안 <br/>\
  - 유럽(GDPR;General Data Protection Regulation) : 개인정보 수집 동의, 열람, 정정, 반대 권리, 개인정보 이동권과 삭제권, 프로파일링 등 자동화된 의사결정 관련 거부권등을 포함 <br/>\
  - 미국(CCPA;California Consumer Privacy Act) : 소비자 프라이버시 관련 정보주체읙 권리와 금전적 제재 규정 <br/>\
  - 중국(사이버보안법) : 기업이 중국 내부에서 지켜야 할 보안 및 프라이버시에 대해 광범위하게 규정 <br/><br/>\
  # 기술적 차원 대응 방안 <br/>\
  - DIDs(Decentralized Identifiers) : 서비스 제공자에 독립적인 사용자 ID를 기반으로 다양한 서비스를 제공받을 수 있도록 해주는 탈 중앙형 식별 체계 <br/>\
  - Solid : 팀버너스리에 의해 제안된 데이터 소유권 보장 위한 탈중앙형 웹 기반 응용 플렛폼 <br/>\
  ',
  // 5
  '# 정의 : 의료기기 사용 / 위험 관리 / 요구사항 포함 국제 표준 <br/><br/>\
  # 구성요소 <br/>\
  1. 적용범위 <br/>\
  2. 용어 및 정의 <br/>\
  3. 위험관리에 대한 요구사항 <br/>\
  4. 위험분석 <br/>\
  5. 위험 평가 <br/>\
  6. 위험 통제 <br/>\
  7. 전반적 잔여 위험의 허용 가능성 평가 <br/>\
  8. 위험관리 보고 <br/>\
  9. 생산 및 생산 후 정보 <br/>\
  ',
  // 6
  '# 정의 : Web / 비대칭(공개키) 암호화 인증방식 <br/><br/>\
  # 부각 배경 : 보안문제 해결 / 사용 편의성 향상 <br/><br/>\
  # 프로세스 <br/>\
  1. 서버는 Challenge, User info Relying Part info를 전송 <br/>\
  2. 브라우저는 Authenticator에서 AutenticatorMakeCredential() 호출 <br/>\
  3. Authenticator는 새로운 키 쌍과 증명을 생성 <br/>\
  4. Authenticator가 브라우저에 데이터 반환 <br/>\
  5. 브라우저가 최종 데이터를 생성하면 응용 프로그램이 서버에 응답을 보냄 <br/>\
  6. 서버 유효성 검사/등록 완료 <br/>\
  ',
  // 7
  '# 정의 : Turing TEST; 대화 기반 기계 지능 테스트 <br/><br/>\
  # 절차 <br/>\
  1. 테스트 환경 구성 : 심사 위원이 대화를 하는 대상을 볼 수 없도록 격리 <br/>\
  2. 컴퓨터 화면을 통해 문자로 대화 : 텍스트 / 질문 수행 시간 5분 규정 <br/>\
  3. 심사위원 평가 : 30%이상의 확률 착각 -> 생각하는 능력을 가진 컴퓨터 <br/><br/>\
  # 활용사례 <br/>\
  - CAPTCHA : 의도 덧칠 문자 그림 <br/>\
  - Alicbot : AIML(Artifical Intelligence Markup Language) 이용해 학습이 가능한 인공 채팅 프로그램 <br/>\
  ',
  // 8
  '# 정의 : 어떤 상품을 기획할 때 각각 구성요소에 대해 소비자가 기대하는 것과 충족 시키는 것 사이의 주관적 관계, 요구사항의 만족, 불만족에 의한 객관적 관계를 설정하여 분석하는 방법 <br/><br/>\
  # 특징 <br/>\
  - 품질의 이원적 인식 : 만족, 불만족이라는 주관적, 객관적 요소 고려<br/>\
  - 품질 개선 : 고객만족 또는 불만족 영향도의 정도에 따른 개선 <br/>\
  - ROI 평가 : KANO 그래프를 통해 사용자 만족도 측면에서의 기존 기능 향상의 투자수익률(ROI)평가 <br/><br/>\
  <img src = "./img/KANO.PNG" width = "500" height = "600"><br/>\
  ',
  // 9
  '# 정의 : Cognitive Radio; 스펙트럼 지능 분석 / 최적 주파수, 변조방식, 출력 선택 / 통신방식 <br/><br/>\
  # 암기법 : 특징3 잉동오! / 기술2 S인, 센결공이 / 종류2 DS / 절차 스전간이 / IEEE802.22 <br/><br/>\
  # 특징 <br/>\
  - 잉여 주파수 대역 확보 : 간섭회피를 위한 주파수 구간 확보, 주파수 효율 활용 <br/>\
  - 동적 주파수 선택 : Adaptive 통신, 스케줄링 기법, 자원 할당기법, QoS <br/>\
  - 오버레이 통신 : 기존 사용자의 시간적/공간적 이동을 확인, 간섭을 주지 않는 범위에서 주파수를 공유 <br/>\
  - IEEE802.22b 표준 : 2011.08. WRAN(Wireless Regional Area Network) 표준으로 채택 (ETRI) <br/><br/>\
  <img src = "./img/CongitiveRadio.PNG" width = "500" height = "300"><br/><br/>\
  # 동작 원리 <br/>\
  - 스펙트럼 센싱 : 1차 서비스가 사용치 않는 스펙트럼 Hide 스캐닝 <br/>\
  - 스펙트럼 생성 : 인지무선 서비스가 스펙트럼 Hole을 사용 <br/>\
  - 충돌 발생 : 1차 서비스가 전송을 시작하여 1차 서비스와 인지무선 서비스간의 간섭 발생 <br/>\
  - 스펙트럼 재설정 : 인지무선 서비스가 다른 스펙트럼 Hole로 이동 <br/><br/>\
  # 주요 기술 <br/>\
  1. 기반기술 <br/>\
  - SDR(Software Defined Radio) : 광대역 신호처리 HW 토대 SW 다운 다기능 수행 기술 <br/>\
  - 인지기술 : 주변정보 지속 수집 스스로 학습 대체기술 -> DB접속 방식, 센싱 방식 <br/>\
  2. 핵심 기술<br/>\
  - 스펙트럼 센싱 : 스펙트럼 검출 -> 정합필터, 에너지검파, 특징추출 <br/>\
  - 스펙트럼 결정 : 동적 주파수 선택 -> 송신전력수준, 경로손실, 우선사용자활동 형태 <br/>\
  - 스펙트럼 공유 : 잉여 주파수 대역 확보 -> 중앙ㅇ형/분산형 <br/>\
  - 스펙트럼 이동성 : 충돌회피방지 -> 스펙트럼 핸드오프 <br/><br/>\
  # 표준 : IEEE 802.22.WRAN <br/><br/>\
  # 동적 절차 <br/>\
  - 스캐닝 : Spectrum Hole로 이동 <br/>\
  - CR 서비스 전송 : 인지무선서비스가 Spectrum Hole <br/>\
  - 간섭발생 : 1차 서비스와 인지무선서비스간의 간섭발생 <br/>\
  - CR 서비스 이동 : Spectrum Hole로 이동 <br/><br/>\
  # 활용 및 전망 : TV 화이트 스페이스 이용 IEEE802.11.af, 802.11.ag 적용 가능 <br/><br/>\
  ',
  // 10
  '# 정의 : 문자나 숫자로 키 값을 표현한 자료구조 <br/><br/>\
  # 특징 <br/>\
  - 초고속 검색 : 키 값 검색 효율 <br/>\
  - 연관 배열 : 문자열 등에 대한 동적 집합 혹은 연관 배열 저장 <br/>\
  - 차수와 크기 결정 : 문자열의 수에 의해 결정 <br/>\
  - 노드 구성 : 분기 노드 / 데이터(외부,잎) 노드 <br/><br/>\
  # 구성요소 <br/>\
  - Root Node : Trie의 시작점으로 빈 문자열 <br/>\
  - Branch Node : Left, Right Child 두개의 데이터 멤버를 갖는 노드 <br/>\
  - Element Node : 데이터(문자열) 저장되며 검색시 이 데이터가 키 값 <br/>\
  ',
  // 11 
  '# 정의 : 요구사항 제시시 하드웨어 요구사항으로 변경하는 활동 <br/><br/>\
  # 규모산정 방법 <br/>\
  - 수식 계산법 : 용량 수치 계산 / 보정치 적용 <br/>\
  - 참조법 : 비슷한 규모 비교 산정 <br/>\
  - 시뮬레이션 법 : 작업 부하 모델링, 시뮬레이션 <br/><br/>\
  # 장단점 비교 <br/>\
  - 수식 계산법 : 근거 제시 가능, 간단한 산정 / 보정치 의존, 근거 불명확 <br/>\
  - 참조법 : 안전한 규모산정 / 수학적 근거제시 미약 <br/>\
  - 시뮬레이션 법 : 상대 적으로 정확한 결과 도출 / 고비용 <br/>\
  ',
  // 12
  '# 정의 : 하이퍼바이저 없이 리눅스 컨테이너 기술을 바탕으로 애플리케이션을 격리된 상태에서 실행하는 가상화 솔루션 <br/><br/>\
  # 기술요소 <br/>\
  1. 아키텍처 관점 <br/>\
  - Docker Host : 도커 컨테이너가 구동 될 수 있는 Engine(Demon)을 관리하는 서버 <br/>\
  - Docker Registry(HUB) : 도커 Image가 저장되어있는 장소, Public/private 형태 존재 <br/>\
  - Docker Image : 도커 Daemon을 통해 Container로 실행 가능하도록 필요한 프로그램, 라이브러리, 소스등이 설치된 파일 <br/>\
  2. Docker Host 관점 <br/>\
  - Docker Engine : Host에 설치되어 도커 Container를 관리하는 Deamon 프로세스 <br/>\
  - Docker Container 관련 요소 : Cgroup(Container 자원 할당 프로세스) / Namespace(Container 격리 기능 제공 프로세스) / Libvirt(가상화를 지원하는 라이브러리) <br/>\
  3. 통합관리 관점 <br/>\
  - Orchestration, solution : 쿠버네틱스, 아파치 Mesos등 도커 클러스터 통합 관리 지원 <br/>\
  ',
  // 13
  '# 정의 : 암호화 키와 복호화 키가 서로 다른 암호화 방식의 알고리즘(공개키 암호화) <br/><br/>\
  - 공개키 : 모든 사람이 접근 가능한 키, 모든 사용자에게 공개됨 <br/>\
  - 개인키 : 각 개인이 소유한 키, 비밀키, 공개 불가 <br/><br/>\
  <img src = "./img/비대칭키.PNG" width = "500" height = "300"><br/><br/>\
  # 필요성 <br/>\
  - 대칭키를 사용하면 Key distribution problem(키 배송문제)가 발생됨 <br/><br/>\
  # 해결방안 <br/>\
  - 키 사전 공유 : 키 관리기관(TA, trusted authority)을 활용하여 송,수신자 다수에게 사전에 공유 <br/>\
                   송,수신자 수가 증가할 수록 n(n-1)/2의 관리비용 소요 <br/>\
  - 키 배포센터(KDC; Key Distribution Center) : 송신자는 키 배포센터에서 세션키를 할당 받아 암호화하고 수신자도 KDC에서 세션키를 할당 받아 복호화 <br/>\
  - Diffie-Hellman 키교환 : 최초의 비밀키 교환 프로토콜 <br/>\
                            송,수신자가 임의의 특정정보를 교환한 후 이산대수문제 활용하여 대칭키 생성 <br/>\
			    1) 송신자는 R1 = g^x mod p 계산 후 수신자에게 R1 전송 <br/>\
			    2) 수신자는 R2 = g^y mod p 계산 후 송신자에게 R2 전송 <br/>\
			    3) 송신자는 K  = (R2)^x mod p 계산 <br/>\
			    4) 수신자는 K  = (R1)^y mod p 계산 <br/>\
			    - 대칭키 K = g^xy mod p 생성 <br/>\
			    (이산대수 공격(R1,R2 가로챔)과 중간자 공격(인증단계 부족)에 취약함 <br/>\
  - 공개키 활용 : 암호키와 복호키를 서로 다르게 구성 <br/>\
                  -수신자만 복호키를 소유 <br/><br/>\
  # 비대칭키 암호의 종류 <br/>\
  1. 인수분해 문제 <br/>\
  - RSA : 공개키 암호의 사실장 표준(de facto), Rivest-Shamir-Adleman ->RSA <br/>\
          인수분해문제(Prime factorization)해결의 난이도를 이용<br/>\
	  SSL 프로토콜을 활용하는 웹 브라우저, 범정부시스템, 전자서명 등에 활용됨 <br/>\
	    암호화 : 암호문 = 평문^e mod n (e,n) 공개키 <br/>\
	    복호화 : 평문 = 암호문^d mod n (d,n) 개인키 <br/>\
	  소인수분해 공격(수학적 공격)과 시간공격, 선택 암호문 공격(CCA, Chosen Ciphertext Attack) 가능 <br/>\
	  RSA-OAEP(Optimal Asymmetric Encryption Padding, 최적 비대칭키 암호 패딩)으로 RSA 개선 <br/>\
  - Rabin : M.O.Rabin이 고안, mod n으로 제곱근을 수학적으로 구하는 것이 어렵다는 것을 이용 <br/>\
            한번의 곱셈으로 연산 속도가 빠르므로 스마트카드 등의 성능 낮은 플랫폼에서 주로 사용 <br/>\
	    - 두개의 서로다른 소수 p,q가 충분히 크다면 해독의 복잡도 증가로 안전 <br/><br/>\
  2. 이산대수 문제 <br/>\
  - Elgamal : 디지털서명, 암호화, 키교환 / 성능 이슈 <br/>\
  - KCDSA : KISA / ElGamal 서명 방식의 변형(이산대수 문제) / EC-KCDSA ( 타원곡선 이용 알고리즘) / 짧은키 효율 <br/>\
  - ECC : Elliptic Curve Cryptosystem; 타원곡선 암호 / 키의 길이 효율성 / 스마트카드, 무선통신, Mobile 환경 등의 환경이 제한된 응용분야에 효율적 <br/>\
  ',
  // 14
  '# 정의 : 벤치 마크 회사 또는 조직이 서비스 또는 제품 품질 관리와 관련하여 프로세스가 성숙하고 문화에 얼마나 잘 포함 되어 있는지 확인하는 조직 성숙도 매트릭스 <br/><br/>\
  # 4대 절대 조건 <br/>\
  - 일치성 : 고객 요구사항과 일치 <br/>\
  - 적절성 : 고객 요구사항 만족을 위해 올바른 행위 실현 <br/>\
  - 무결성 : 무결성 기반 품질활동 수행 (성과표준) <br/>\
  - 비용 : 품질성과 측정 척도는 비용 <br/><br/>\
  # 품질경영 성숙도 모델 5단계 <br/>\
  1. 불확실성(Uncertainty) : 품질 및 품질관리에 관한 인식이 전혀 이뤄지지 않는 단계 <br/>\
  2. 인지(Awakening) : 품질관리의 필요성을 인직하지만 투자나 구체적인 조치가 전혀 이뤄지지 않은 상태 <br/>\
  3. 이해(Enlightenment) : 품질개선을 위한 구체적인 조치가 지속적으로 이뤄지는 단계 <br/>\
  4. 지혜(Wisdom) : 품질의 중요성 기업 뿐만 아니라 개인도 인식하여 주롱 ㅖ방적 조치에 전념 <br/>\
  5. 확신(Certainty) : 품질관리 활동이 기업의 필수 요소로 기업의 근본적 방침으로 인식되어 지속적이고 완벽한 품질에 관한 인과 관계를 충분히 인식하는 단계 <br/>\
  ',
  // 15
  '# 정의 : Latent Dirichlet Allocation; 잠재 디리클레 분포 할당 알고리즘 <br/><br/>\
  # 특징 <br/>\
  - 비지도 생성 토픽모델 <br/>\
  - 특정문서 or 문서집합에서 숨겨진 의미 정보를 추출하고 문서를 분류하는 토깊 모델링 알고리즘의 하나 <br/>\
  - 자연어 처리 기반 <br/>\
  - 주어진 문서에 대하여 각 문서에 어떤 주제들이 존재하는지에 대한 확률 모형<br/>\
  # 구성요소 <br/>\
  - Latent(잠재적인) :  감춰진 주제로부터 하나의 주제를 선택 / 선택된 주제로부터 단어를 선택 (잠재, 비지도) <br/>\
  - Dirichlet(독일의 수학자) : 디리클레 분포를 사용 / 연속확률 분포, 사전확률 <br/>\
  - Allocation(할당) : 다항분포(Multinomial Distribution) 주제를 할당하고, 그 주제로부터 단어를 추출 <br/><br/>\
  <img src = "./img/LDA.PNG" width = "500" height = "400"><br/><br/>\
  # LDA 응용 모델 <br/>\
  - ATM(Author Topic Model) : 문서의 토픽이 아닌 저자 관점의 토픽 추출 <br/>\
  - DTM(Dynamic Topic Model) : 시간에 따른 토픽의 흐름을 분석 <br/>\
  - Nubbi : 웹문서들로부터 개체 간의 관계를 분석 <br/>\
  - S-EGTM : 하나의 문서 내의 개체 간의 관계들을 분석 <br/>\
  ',
  // 16
  '# 정의 : 최적화 탐색 방법 / 생물의 진화과정 모방 / 근사값 해답 신속하게 찾는 알고리즘 <br/>\
  - 미시건 대학교 존 홀랜드(John Holland)에 의해서 1975년 개발된 전역 최적화 기법<br/><br/>\
  # 유전자 알고리즘 처리 프로세스 <br/>\
  <img src = "./img/유전자알고리즘처리프로세스.PNG" width = "500" height = "400"><br/><br/>\
  # 유전자 알고리즘 구성요소 <br/>\
  1. 연산환경 <br/>\
  - 개체군 : Population / 입력값의 집합 / 이진인코딩, Value인코딩, 트리 인코딩 <br/>\
  - 유전자형 : 개체군의 유전정보를 표현 / 이진스트링, 상수스트링, 실수스트링 <br/>\
  - 세대 : Generation / 유전자들의 생성과 소멸 주기 <br/>\
  - 적합도 함수 : Fitness Function / 최적화하고자 하는 각 개체가 주어진 문제에서 얼마나 적합할지를 평가하기 위한 기준 함수 <br/>\
  2. 알고리즘 <br/>\
  - 선택 : Selection / 염색체 선정, 교배연산 적용 / 룰렛휠, Ranking, 토너먼트, 엘리트보존 <br/>\
  - 교배 : Cross-Over, 교차 / 부모 유전자를 혼합하는 연산 / 단순, 이점, 균등, 사이클, 순서, 부분, 산술적 교배, 휴리스틱 등 <br/>\
  - 돌연변이 : Mutation  / 몇 개의 비트를 선택한 후 비트 값 변경 / 0.5~11% 수준으로 변이 유발 <br/>\
  - 대치 : Subsitution / 최환, 연산결과로 도출된 해집단을 기존의 나쁜 유전자와 바꾸는 연산 / 부모세대의 우수한 유전자는 보존되며, 나쁜 유전자는 개선 <br/><br/>\
  # 활용 용도 <br/>\
  - 네트워크 : 최적의 배치 탐색 <br/>\
  - 생산 시스템 : 생산 조립라인의 시뮬레이션을 통한 최적화 방안 수립 <br/>\
  - NP-완전문제 : 기존의 알고리즘이 적용되지 않는 NP-Hard 문제에 대한 해법 제공 / 외판원 문제, 해밀턴 경로 문제, 그래프 색칠 문제 <br/>\
  ',
  // 17
  '- 초자동화(Hyperautomation) : AI를 이용한 자동화(RPA등)<br/>\
  - 멀티경험(Multiexperience) : 다중 센서 경험, 다중 모드 경험 <br/>\
  - 민주화(Democratization of Expertise) : 데이터 분석, 개발, 설계 민주 <br/>\
  - 인간 증강(Human Augmentation) : 물리적 증강, 인식적 증강 <br/>\
  - 투명성 및 추적성(Transparency and Traceability) : 디지털 윤리와 개인정보 보호의 요구 충족 <br/>\
  - 엣지 강화(Empowered Edge) : 엣지 컴퓨팅의 발전된 개념 <br/>\
  - 분산 클라우드(Distributed Cloud) : 퍼블릭 클라우드 서비스의 분포 확대 <br/>\
  - 자율주행 사물(Autonomous Things) : 로봇, 드론, 자율주행차 등 다양성, 자율성 증가 <br/>\
  - 블록체인 실용화(Practical Blockchain) : DID등 실용적 블록체인 활용 <br/>\
  - 인공지능보안(AI Security) : AI를 이용한, AI에 의한, AI에 대한 보안 <br/>\
  ',
  // 18
  '# OffShoring 정의 : 제조 원가 절감을 위해 해외 저비용 생산이 가능하도록 개발 도상국으로 이전하는 현상 <br/><br/>\
  # Reshoring 정의 : 생산 거점 본국으로 재 이전 현상 <br/><br/>\
  # 비교 <br/>\
  - 개념 : 기업의 일부를 저임금 해외 기업으로 아웃소싱 / 낮은 물류 비용, 단순한 공급망 기반 제조거점 본국 이전 <br/>\
  - 목적 : 저원가 제조환경 / 제품과 서비스 융합으로 고품질 제품 적시 출시 <br/>\
  - 산업 구조 : 노동 집약적 제조 산업 환경 / 서비스 산업과 제조업이 결합된 첨단 융합 산업구조 <br/>\
  - 확산 배경 : 소품종 대량생산, 저임금 및 제조원가 비용 / 다품종 소량 생산(제조의 서비스화), 스마트 팩토리 <br/>\
  - 가치사슬 : 가치사슬의 물리적 분리로 협업 가치 사슬 약화 / 가치사슬 협력 증대 <br/><br/>\
  # 리쇼어링 성공 전략 <br/>\
  - 내수시장 초점 전략 : 내수사업 재개<br/>\
  - 원가 절감 위한 차별화 : 제조 프로세스, 스마트 팩토리 도입을 통한 원가 절감 구현 <br/>\
  - 제조 네트워크 구축 방안 마련 : 저임금 제조 네트워크 내수 구축 방안 마련 <br/>\
  - 정부와 긴밀한 협조 : 리쇼어링을 위한 정부 협력 / 제도적 협조 <br/>\
  ',
  // 19
  '# 정의 : 이용자의 패턴을 조합해 스마트폰을 인증하는 구글 프로젝트 <br/><br/>\
  # 특징 <br/>\
  - Trust Score <br/>\
  - 연속적인 암호 입력 불필요 <br/><br/>\
  # 추진 배경 <br/>\
  - 생체 인증 진화 : 본인 인증 수단 방식 <br/>\
  - 높은 보안 수준 요구 : 생체 인증 중 비행위 기반 방식의 치명적인 단점의 보완 필요 <br/>\
  ',
  // 20
  '# 정의 : NotOnly SQL ; Join less, 고정된 스키마를 갖지 않는 DBMS <br/><br/>\
  # 특징 <br/>\
  - RDB 한계 극복 : 관계형 모델을 사용하지 않음 <br/>\
  - 분산 환경 지원 : 클러스터에서 잘 작동함 <br/>\
  - 저비용 처리 : 대부분 오픈 소스 <br/>\
  - 확장성 : 21세기 웹 환경을 위해 구축 됨 <br/>\
  - 다양한 형태의 저장 구조 : 스카마가 없음 <br/><br/>\
  # 이론적 배경 CAP 이론의 개념 <br/>\
  - 일관성(Consistency) : 모든 노드들은 동시에 같은 데이터를 보아야 함 <br/>\
  - 가용성(Avalability) : 각각의 클라이언트들은 항상 읽고 쓸 수 있어야 함 <br/>\
  - 분할 용인(Partition) : 네트워크 실패로 인하여 임의의 메시지 손실, 시스템 부분실패가 발생해도 시스템은 계속적으로 동작해야 함<br/><br/>\
  <img src = "./img/CAP.PNG" width = "500" height = "500"><br/><br/>\
  # BASE 개념 <br/>\
  - Basically Avaliable : 가용성 중시, 낙관적 락킹 및 큐 사용, 다수의 실패에도 가용성 보장, 다수의 스토리지에 복사본 저장 <br/>\
  - Soft-State : 노드의 상태는 외부에서 전송된 정보를 통해 결정 <br/>\
  - Eventually consistent : 비일관적인 상태가 일시적으로 일어나더라도 일정 시간 후에는 일관성 있는 상태로 복귀 <br/><br/>\
  <img src = "./img/BASE_ACID.PNG" width = "500" height = "500"><br/><br/>\
  ',
  // 21
  '# 정의 : 데이터 처리과정에서 데이터의 일관성, 정확성, 유효성을 보장하기 위한 데이터베이스의 제약 조건 <br/><br/>\
  # 종류<br/>\
  - 개체 무결성 : NOT NULL / Primary Key, Unique Index <br/>\
  - 참조 무결성 : 외래키 속성 참조할 수 없는 값을 지닐 수 없음 / Foregin Key <br/>\
  - 도메인(속성) 무결성 : 도메인에 지정된 데이터 형식 만족 / Check Null/Not Null, Default <br/>\
  - 사용자 무결성 : 비즈니스 요구에 따른 의미적 제한 준수 / Trigger, User Defined Data Type <br/>\
  - 키 무결성 : 한 릴레이션에 같은 키 값을 가진 튜플들은 허용 안됨 / Unique Index <br/>\
  ',
  // 22
  '# 정의 : 현실세계의 업무 프로세스를 이해하기 쉬운 형태로 추상화하여 데이터베이스의 데이터구조로 표현하기 위한 설계 과정<br/><br/>\
  # 절차 <br/>\
  요구사항 분석 - 개념 모델링 - 논리 모델링 - 물리 모델링 <br/><br/>\
  # 요구사항 분석 절차 <br/>\
  도출 - 분석 - 명세 <br/><br/>\
  # 개념 모델링 단계 <br/>\
  주제영역 도출 - 핵심 데이터집합 도출 - 관계설정, 핵심속성 도출, 식별자 도출 - 검징 및 조정 작업 <br/><br/>\
  # 데이터 논리 모델링 <br/>\
  속성 상세화 - 개체 상세화 - 이력관리 <br/><br/>\
  # 데이터 물리 모델링 <br/>\
  환경분석 - 논리/물리 변환 - 반정규화 <br/>\
  ',
  // 23
  '# 정의 : 기존에 존재하던 산업간 경계가 모호하게 변화하는 현상 <br/><br/>\
  <img src = "./img/빅블러개요.PNG" width = "500" height = "400"><br/><br/>\
  # 사례 <br/>\
  <img src = "./img/빅블러사례.PNG" width = "500" height = "400"><br/><br/>\
  1. 보안<br/>\
  - 프레너미 : 적군과 아군의 경계가 사라지는 현상, 내부 직원에 의한 정보유출 사고 <br/>\
  - 랜섬 APT : 랜섬웨어와 APT 공격 갈합, 금전 요구와 대규모 해킹 동시 공격 <br/>\
  2. 금융 <br/>\
  - 간편 결제 : 모바일과 앱의 융합, 앱카드 결제를 통한 플라스틱 카드 대체 <br/>\
  - 인터넷 전문 은행 : 은행점포에서 모바일 중심으로 금융산업의 형태가 빠르게 변화 <br/>\
  3. 유통 <br/>\
  - O4O : 온라인 기업의 고객 정보를 활용한 오프라인 사업 생태계 확산 <br/>\
  - 플랫폼화 : 편의점, 약국, 생활용품점의 ICT 융합 통한 플랫폼 전략 활용 <br/>\
  ',
  // 24
  '# 정의 : 디스크상 데이터 로딩 소요시간 최소화 알고리즘  <br/><br/>\
  # Disk 접근 시간 <br/>\
  - 탐색 시간 : 헤드를 먼저 트랙 또는 실린더에 위치시키는데 필요한 시간 <br/>\
  - 회전지연시간 : 해당 트랙에서 디스크 원판이 회전하여 원하는 섹터가 헤드의 바로 아래 위치할 때까지 걸리는 시간 <br/>\
  - 전송 시간 : 디스크와 주기억장치간에 자료가 이동하는데 걸리는 시간 <br/><br/>\
  # 디스크 스케줄링 알고리즘 종류 <br/>\
  1. 탐색시간 최적화 <br/>\
  - FCFS(First Come First Service) : 요청이 들어온 순서대로 처리 <br/>\
  - SSTF(Shortest Seek Time First) : 현재 디스크의 헤드 위치에서 가장 가까운 실린더에 대한 요청을 우선적으로 처리 <br/>\
  - SCAN : 디스크의 끝에서 끝으로 이동하면서 처리, 마지막 실린더에 도착하면 반대 방향으로 스캔 진행 <br/>\
  - C-SCAN : 디스크의 끝으로 이동하면서 처리하며, 마지막 실린더에 도착하면 시작점으로 돌아간 후 다시 스캔 진행 <br/>\
  - C-LOOK : C-SCAN에서는 양 끝까지 이동하던 것을 요청된 실린더 중 마지막까지만 이동하는 방식 <br/>\
  - N단계 SCAN 스케줄링 : SCAN 스케줄링과 같이 진행방향 상의 요청을 서비스하지만 진행 중에 새로이 추가된 요청은 서비스하지 않고 다음 진행시에 서비스하는 기법 <br/>\
  2. 회전 시간 최적화 <br/>\
  - 에센바흐 기법(Eschenbach) : 탐색 시간 최적화뿐만 아니라 회전 지연 시간도 최적화하고자 하는 최초의 기법(항공시스템 예약) <br/>\
  - SLTF(Shortest Latency Time First) : 회전 지연시간 최적화를 위한 대표적 알고리즘으로 디스크 헤드가 특정 실린더에 도착하면 그 실린더 내의 여러 트랙에 대한 요청들을 검사한 후 회전 지연 시간이 가장 짧은 요청부터 서비스하는 기법 <br/>\
  ',
  // 25
  '# 정의 : 주어진 상태에서 주어진 행동을 수행하는 것이 가져다 줄 효용의 기대값을 예측하는 함수인 Q 함수를 학습함으로써 최적의 정책을 학습하는 강화 학습기법 <br/><br/>\
  # 특징 <br/>\
  - Model Free : 특정한 모델 없이 사용할 수 있는 강화 깁버 / 범용적 활용 <br/>\
  - Q Function : 특정상태에서 최대의 효용을 가져다 주는 행동을 결정 / 정책 결정 <br/>\
  - 학습방법 : Q함수를 이용한 즉시보상값과 미래보상값의 누적치의 최대값 / Learning Rate로 반영비율 조절 <br/><br/>\
  # 구성요소 <br/>\
  - Q Function : Input이 State, Action이고, Output이 Reward인 함수 / Q Table <br/>\
  - MAX Q : 임의의 상태 s(state)에서 Q가 가질 수 있는 최대 보상값 / Max Q = Max Q(s,a`)<br/>\
  - 정책(Pi) : 임의이 상태 s(state)에서 Q가 최대값을 가지게 하는 a(action)값 / pi*(s) = argmax Q(s,a) <br/>\
  ',
  // 26
  '# 정의 : 가상메모리 사용시 물리적 기억장치 사용공간이 없을 때 어떤 페이지 프레임을 내보낼지 결정하는 기법 <br/><br/>\
  # 특징 <br/>\
  - Trade-off : 페이지 크기에 따른 Trade-Off<br/>\
                크기 클수록 필요 없는 정보 추가, 적재 문제<br/>\
  - FIFO Anomaly : Belady s Anomaly(벨라디의 모순) <br/>\
                   더 많은 페이지 할당 시 더 많은 부재 발생 <br/><br/>\
  # 페이지교체 알고리즘 종류 <br/>\
  1. 기본방법 <br/>\
    - 빈 프레임을 찾아 내용을 전이 시킨것 <br/>\
    - 빈 프레임이 없으면 페이지 교체 알고리즘을 구동시켜 빈 프레임을 만든 뒤 기록 <br/>\
  2. 무작위페이지 교체 <br/>\
    - 특별한 사용자에게 차이를 두지 않고 페이지를 무작위로 선택하여 교체하는 기법 <br/>\
    - 오버헤드가 적지만 최악의 경우, 바로 뒤의 호출페이지 교체 가능 <br/>\
  3. 선입선출교체(FIFO) <br/>\
    - 각 페이지가 주기억장치로 들어올 때마다 timestamp를 찍어 시간을 기억 하였다가 교체될 필요가 있을 때 가장 먼저 주기억 장치에 들어와 있는 페이지와 교체하는 방법 <br/>\
    - FIFO Anomaly 또는 Belady s Anomaly (페이지 프레임 수가 증가될 때 현실적으로 페이지 부재가 감소하지 않고 더 증가하는 현상 <br/>\
  4. 최적의 페이지 교체(Optical Page)<br/>\
    - Belady의 MIN 페이지 교체 기법 <br/>\
    - 최적의 성과를 얻기 위해 현 페이지가 참조된 시점에서 그 이후로도 가장 오랫동안 사용되지 않을 페이지를 교체 <br/>\
    - FIFO의 모순을 피할 수 있는 알고리즘(최소이 페이지 부재율) <br/>\
    - 호출 순서의 사전파악으로 처리가 어렵고 비현실적 <br/>\
  5. 2차 기회교체(second chance) <br/>\
    - FIFO의 가장 오래되고 가장 자주 쓰이던 페이지 대체 방지 <br/>\
    - 선형큐 + 피드백의 형태구조 <br/>\
    - 페이지 테이블에 1개의 참조 비트를 연관시킴 <br/>\
    - 참조 비트 Q : 페이지 교체 <br/>\
    - 참조 비트가 1: 0으로 바꾸어 다음 큐로 피듭개 <br/>\
  6. LRU(Least Recently Used) 교체 <br/>\
    - 한 프로세스가 사용되는 각 페이지마다 카운터를 두어 현시점에서 가장 오랫동안 사용되지 않은 페이지를 제거하는 방법 <br/>\
    - 미래에 대한 경험적인 국부성에 의존 <br/>\
    - 시간기록에 따른 오버헤드 발생, 구현 복잡 <br/>\
  7. LFU(Least Frequency Used) 교체 <br/>\
    - 사용빈도가 가장 적은 페이지를 교체하는 방법 <br/>\
    - 바로 불러온 페이지의 교체 가능성 발생 <br/>\
    - 초기에 많이 사용되고 그 후로 다시 사용되지 않는 경우의 어려움 <br/>\
    - 계수기의 일정 간격 지수적 감소를 이용한 평균 사용 수형성으로 해결 <br/>\
  8. NUR(Not Used Recently) 교체 <br/>\
    - 최근에 사용되지 않은 페이지를 2개의 비트를 이용하여 교체하는 방법 <br/>\
    - LRU의 시간 오버헤드 감소방법<br/>\
    - 참조비트와 변형 비트 사용 <br/>\
    - 주기적으로 참조 비트를 0으로 set함<br/>\
  9. 페이지 버퍼링 알고리즘 <br/>\
    - 페이지 교체 기법들과 함께 사용하는 버퍼 변환 기법 <br/>\
  10. 워킹 세트 <br/>\
    - 하나의 프로세스에 자주 참조되는 페이지를 모아놓은 기법으로 그 잡합에 속하지 않은 페이지를 교체 <br/>\
    - Thrashing을 방지 <br/>\
  11. PFF(Page Fault Frequecny) <br/>\
    - 현재 페이지부재와 바로 전 페이지 부재 사이의 시간을 관찰하여 그 시간이 지금까지 최소시간곱다 크면 그 사이에 호출되지 않았던 페이지들을 모두 제거하는 기법 <br/>\
    - 프로세스의 변화에 따라 유동적으로 교체 가능 <br/>\
  ',
  );
